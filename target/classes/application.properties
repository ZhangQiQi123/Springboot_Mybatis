#com.neo.title=纯洁的微笑
#com.neo.description=分享生活和技术
server.port=8088
#log
logging.level.org.springframework=INFO

#dataSource数据源
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource 
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/mytest?useUnicode=true&characterEncoding=utf-8 
spring.datasource.username=root
spring.datasource.password=admin
spring.datasource.filters=stat 
spring.datasource.maxActive=20 
spring.datasource.initialSize=1 
spring.datasource. maxWait=60000 
spring.datasource.minIdle=1 
spring.datasource.timeBetweenEvictionRunsMillis=60000 
spring.datasource. minEvictableIdleTimeMillis=300000 
spring.datasource.validationQuery=select 'x' 
spring.datasource.testWhileIdle=true 
spring.datasource.testOnBorrow=false 
spring.datasource. testOnReturn=false 
spring.datasource. poolPreparedStatements=true 
spring.datasource.maxOpenPreparedStatements=20 


spring.profiles.active=dev

#springboot-mybatis
#注意：一定要对应mapper映射xml文件的所在路径
mybatis.mapper-locations=classpath:mapping/*.xml  
#mybatis配置文件
mybatis.config-location=classpath:mybatis-config.xml 
# 注意：对应实体类的路径
mybatis.type-aliases-package=com.zqq.model 
   
    
#pagehelper分页插件 
#pagehelper.helperDialect=mysql 
#pagehelper.reasonable=true 
#pagehelper.supportMethodsArguments=true 
#pagehelper.params=count=countSql 

#hibernate jpa
#create： 每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
#create-drop ：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
#update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据 model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等 应用第一次运行起来后才会。
#validate ：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。
#spring.jpa.properties.hibernate.hbm2ddl.auto=update
##dialect 主要是指定生成表名的存储引擎为InneoDB
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
##show-sql 是否打印出自动生产的SQL，方便调试的时候查看
#spring.jpa.show-sql= true
